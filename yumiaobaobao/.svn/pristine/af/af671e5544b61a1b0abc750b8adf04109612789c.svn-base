package com.yumiaobaobao.app.schoolcourse.controllor;

import com.alibaba.fastjson.JSON;
import com.yumiaobaobao.app.schoolcourse.entity.SchoolCoures;
import com.yumiaobaobao.app.schoolcourse.service.schoolcourseService;
import com.yumiaobaobao.app.schoolscore.entity.schoolscore;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import java.util.ArrayList;
import java.util.List;

/**
 * @Title 课程
 * 　* @author
 * 　* @date 2019.05.28 9:36
 *
 */
@RestController
@Api(tags = "微课程:1.根据id查询课程  2.该商户其他课程推荐  3.相关课程推荐 4:查询课程评论 ")
public class schoolcourseControllor {
    @Autowired
    private schoolcourseService schoolcourse;

    @RequestMapping(value = "allSchoolCourse", method = RequestMethod.GET)
    @ApiOperation(value = "查询课程信息", notes = "查询课程信息 Message 0 没有数据")
    public String allSchoolCourse(Integer id) {
        List<SchoolCoures> schoolcourseList = schoolcourse.allSchoolCourse(id);
        if (schoolcourseList == null || schoolcourseList.size() == 0) {
            return "{\"Message\": \"0\"}";
        }
        return "{\"Message\": \"OK\", \"Data\":" + JSON.toJSONString(schoolcourseList) + "}";
    }

    @RequestMapping(value = "commendCourse", method = RequestMethod.GET)
    @ApiOperation(value = "根据店铺id查询所有课程信息", notes = "根据店铺id查询所有课程信息 Message 0 没有数据")
    public String commendCourse(Integer belongShopid) {
        List<SchoolCoures> schoolcourseList = schoolcourse.commendCourse(belongShopid);
        if (schoolcourseList == null || schoolcourseList.size() == 0) {
            return "{\"Message\": \"0\"}";
        }
        return "{\"Message\": \"OK\", \"Data\":" + JSON.toJSONString(schoolcourseList) + "}";
    }


    @RequestMapping(value = "courseComment", method = RequestMethod.GET)
    @ApiOperation(value = "根据课程id查询课程评论", notes = "根据课程id查询课程评论 Message 0 没有数据")
    public String courseComment(Integer courseId) {
        List<schoolscore> schoolcourseList = schoolcourse.courseComment(courseId);
        if (schoolcourseList == null || schoolcourseList.size() == 0) {
            return "{\"Message\": \"0\"}";
        }
        return "{\"Message\": \"OK\", \"Data\":" + JSON.toJSONString(schoolcourseList) + "}";
    }

    @RequestMapping(value = "recommendCourse", method = RequestMethod.GET)
    @ApiOperation(value = "根据课程类型推荐相关课程", notes = "根据课程类型推荐相关课程 Message 0 没有数据")
    public String recommendCourse(Integer id) {
        List<SchoolCoures> schoolcoursesLists = new ArrayList<SchoolCoures>();
        List<SchoolCoures> schoolcourseList = schoolcourse.allSchoolCourse(id);//id查询课程
        for (SchoolCoures course : schoolcourseList) {
            Integer classType = course.getClasstype();
            schoolcoursesLists = schoolcourse.recommendCourse(classType);
            if (schoolcoursesLists != null && schoolcoursesLists.size() > 0) {
                return "{\"Message\": \"OK\", \"Data\":" + JSON.toJSONString(schoolcoursesLists) + "}";
            }
        }
        return "{\"Message\": \"0\"}";
    }


    @RequestMapping(value = "randomSchoolCourse", method = RequestMethod.GET)
    @ApiOperation(value = "随机课程推荐(10个)", notes = "随机课程推荐 Message 0 没有数据")
    public String randomSchoolCourse() {
        List<SchoolCoures> schoolCoursesList = schoolcourse.randomSchoolCourse();
        if (schoolCoursesList != null && schoolCoursesList.size() > 0) {
            return "{\"Message\": \"OK\", \"Data\":" + JSON.toJSONString(schoolCoursesList) + "}";
        }
        return "{\"Message\": \"0\"}";
    }
}
