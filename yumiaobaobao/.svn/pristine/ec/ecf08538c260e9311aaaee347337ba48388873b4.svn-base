package com.yumiaobaobao.app.user.userupdate.Controller;

import com.aliyun.oss.ServiceException;
import com.yumiaobaobao.app.common.dto.AliyunMessage;
import com.yumiaobaobao.app.common.dto.AliyunOssParameter;
import com.yumiaobaobao.app.common.utils.aliyunossutil.AliyunOSSUpLoadUtil;
import com.yumiaobaobao.app.common.utils.aliyunossutil.LocalDelete;
import com.yumiaobaobao.app.common.utils.util.RandomNumberUtil;
import com.yumiaobaobao.app.user.entity.UserInfo;
import com.yumiaobaobao.app.user.userupdate.service.UserUpdateService;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import java.io.File;
import java.io.FileOutputStream;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Created by WH on 2019/04/10.
 */

@RestController
@Component
@Api(tags = "修改个人资料 1.修改头像 2.修改芋苗宝宝号 3.修改手机号 4.修改其他信息 性别 昵称 签名 生日 位置")
public class UserUpdateController {

    private final Logger logger = LoggerFactory.getLogger(getClass());

    @Autowired
    private UserUpdateService userUpdateService;

    @ApiOperation(value = "修改用户头像", notes = "修改用户头像 Message 0=>找不到文件 1=>成功 -1=>修改失败 -2=>已知错误 ")
    @RequestMapping(value = "/updateHeadImg", method = RequestMethod.POST)
    public String updateHeadImg(@ApiParam("用户id") @RequestParam("userId") String userId, @ApiParam("头像") @RequestParam("file") MultipartFile file) {
        String filename = file.getOriginalFilename();
        try {
            if (file != null) {
                if (!"".equals(filename.trim())) {
                    File newFile = new File(filename);
                    FileOutputStream os = new FileOutputStream(newFile);
                    os.write(file.getBytes());
                    os.close();
                    file.transferTo(newFile);
                    //上传到OSS  //uploadUrl文件全路径存放到对应的数据库表中
                    String uploadUrl = AliyunOSSUpLoadUtil.upLoad(newFile, AliyunOssParameter.FILE_HOST_userinfoimg, userId);
                    if (uploadUrl == null) {
                        return "{\"Message\":\"0\"}";
                    }
                    int result = userUpdateService.updateHeadImg(uploadUrl, userId);
                    if (result <= 0) {
                        return "{\"Message\":\"-1\"}";
                    }
                    File file1 = new File("");
                    String s = file1.getAbsolutePath();
                    LocalDelete.delete(s + "\\" + filename);// 删除上传的文件  上传成功后会在项目根目录存在一张图片
                }
            }
        } catch (Exception ex) {
            logger.error(ex.getMessage());
            return "{\"Message\":\"-2\"}";
        }
        return "{\"Message\":\"1\"}";
    }

    @ApiOperation(value = "修改芋苗宝宝号 ", notes = "修改芋苗宝宝号 一个用户只能修改一次  Message  1=>成功 -1=>该育苗宝宝号已经被注册  -2=>未知错误更换失败 ")
    @RequestMapping(value = "/updateYmMiaoAccount", method = RequestMethod.POST)
    public String updateYmMiaoAccoent(@ApiParam("芋苗宝宝号") @RequestParam("YmMiaoAccount") String ymMiaoAccount,
                                      @ApiParam("需要更改的用户ID") @RequestParam("userId") String userId) {
        UserInfo list = userUpdateService.selecByYmMiaoAccoent(ymMiaoAccount);//判断该芋苗宝宝号是否被注册
        if (null == list) {
            if (userUpdateService.updateYmMiaoAccoent(userId, ymMiaoAccount) <= 0) {
                return "{\"Message\": \"-2\"}";
            }
            return "{\"Message\": \"1\"}";
        }
        return "{\"Message\": \"-1\"}";
    }

    @ApiOperation(value = "修改用户手机号 ", notes = "修改用户手机号  Message 0=>验证码输入错误 1=>成功 -1=>该手机号已经被注册  -2=>未知错误更换失败 ")
    @RequestMapping(value = "/updatePhone", method = RequestMethod.POST)
    public String updatePhone(@ApiParam("更改后的手机号") @RequestParam("userPhone") String userPhone,
                              @ApiParam("需要更改的用户ID") @RequestParam("userId") String userId,
                              @ApiParam("验证码") @RequestParam(value = "codephone") String Inputcodephone) {
        if (!Inputcodephone.equals(AliyunMessage.getUserInfoUpdateMessage())) {
            return "{\"Message\": \"0\"}";
        } //判断验证码
        UserInfo userInfo = userUpdateService.byUserPhoneToUserInfo(userPhone);//先判断该手机号是否被注册
        if (null == userInfo) {
            if (userUpdateService.updatePhone(userPhone, userId) <= 0) {
                return "{\"Message\": \"-2\"}";
            }
            return "{\"Message\": \"1\"}";
        }
        return "{\"Message\": \"-1\"}";
    }

    @RequestMapping(value = "/updateInfo", method = RequestMethod.POST)
    @ApiOperation(value = "修改个人资料", notes = "修改个人资料  Message- 0 修改失败  1 修改成功  -2=>捕捉到异常")
    public String updateInfo(
            @ApiParam("用户ID") @RequestParam("userid") String userid,
            @ApiParam("性别") @RequestParam(value = "userGender", required = false) String userGender,
            @ApiParam("昵称") @RequestParam(value = "userName", required = false) String userName,
            @ApiParam("签名") @RequestParam(value = "signature", required = false) String signature,
            @ApiParam("生日") @RequestParam(value = "userbirthday", required = false) String userbirthday,
            @ApiParam("位置") @RequestParam(value = "userAddrss", required = false) String userAddrss,
            @ApiParam("头像") @RequestParam(value = "file", required = false) MultipartFile file) {
        Map<String, Object> map = new HashMap<>();
        map.put("userid", userid);
        map.put("userGender", userGender);
        map.put("userName", userName);
        map.put("signature", signature);
        map.put("userbirthday", userbirthday);
        map.put("userAddrss", userAddrss);
        //上传头像
        String filename = file.getOriginalFilename();
        try {
            if (file != null) {
                if (!"".equals(filename.trim())) {
                    //图像重新命名
                    String newName = RandomNumberUtil.randomnumberEnglish(8);
                    File newFile = new File(newName);
                    FileOutputStream os = new FileOutputStream(newFile);
                    os.write(file.getBytes());
                    os.close();
                    file.transferTo(newFile);
                    //上传到OSS  //uploadUrl文件全路径存放到对应的数据库表中
                    String uploadUrl = AliyunOSSUpLoadUtil.upLoad(newFile, AliyunOssParameter.FILE_HOST_userinfoimg, userid);
                    if (uploadUrl == null) {
                        return "{\"Message\":\"0\"}";
                    }
                    int result = userUpdateService.updateHeadImg(uploadUrl, userid);
                    if (result <= 0) {
                        return "{\"Message\":\"-1\"}";
                    }
                    File file1 = new File("");
                    String s = file1.getAbsolutePath();
                    LocalDelete.delete(s + "\\" + filename);// 删除上传的文件  上传成功后会在项目根目录存在一张图片
                    map.put("avatarImg", uploadUrl);
                }
            }
        } catch (Exception ex) {
            logger.error(ex.getMessage());
            return "{\"Message\":\"-2\"}";
        }
        int i = userUpdateService.updateUserInfo(map);
        List<UserInfo> userInfolist = userUpdateService.selectUserName(map);
        if (userInfolist.size() > 0) {
            for (UserInfo userInfo : userInfolist) {
                if (userName.equals(userInfo.getUsername())) {
                    throw new ServiceException("用户名称已存在");
                }
            }
        }
        if (i == 0) {
            return "{\"Message\": \"0\"}";
        }
        return "{\"Message\": \"1\"}";
    }


    @RequestMapping(value = "/updateComment", method = RequestMethod.GET)
    @ApiOperation(value = "是否允许附近人评论", notes = "是否允许附近人评论 message 0=>更新失败 1 更新成功")
    public String updateComment(@ApiParam("用户ID") @RequestParam("userid") String userid,
                                @ApiParam("显示状态") @RequestParam("isshow") String type) {
        int i = userUpdateService.updateComment(userid, type);
        if (i == 0) {
            return "{\"Message\": \"0\"}";
        }
        return "{\"Message\": \"1\"}";
    }
}
