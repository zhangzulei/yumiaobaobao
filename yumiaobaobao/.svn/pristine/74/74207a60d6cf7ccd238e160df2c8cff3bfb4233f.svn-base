package com.yumiaobaobao.app.user.comment.controllor;

import com.alibaba.fastjson.JSON;
import com.yumiaobaobao.app.common.utils.util.DateUtils;
import com.yumiaobaobao.app.user.entity.UserInfo;
import com.yumiaobaobao.app.user.entity.user_favo;
import com.yumiaobaobao.app.user.like.jpush.JPush;
import com.yumiaobaobao.app.user.like.service.UserInfoService;
import com.yumiaobaobao.app.user.like.service.User_FavoService;
import com.yumiaobaobao.app.user.userupdate.service.UserUpdateService;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.*;

import java.util.HashMap;
import java.util.List;
import java.util.Map;


@RestController
@Slf4j
@Api(tags = "新增粉丝")
public class User_FavoControllerController {

    @Autowired
    private User_FavoService favoService;
    @Autowired
    private UserInfoService userInfoService;
    @Autowired
    private UserUpdateService userUpdateService;


    @Transactional
    @ApiOperation(value = "新增粉丝", notes = "新增粉丝 Message =>0 只能点赞一次   1=>点赞成功   -1=>没有该条说说  " +
            "-2=>新增点赞记录失败   -3=>改变点赞数量失败  -4=>不能给自己点赞")
    @GetMapping(value = "/newFans")
    public synchronized String newFans(
            @ApiParam("新增粉丝id") @RequestParam("fatherid") String fatherid,
            @ApiParam("用户id") @RequestParam("userId") String userId,
            @ApiParam("标签ID") @RequestParam("typeId") String noteId,
            @ApiParam("用户名称") @RequestParam(value = "username") String username) {
        user_favo favo = new user_favo();
        Map<String, Object> map = new HashMap<String, Object>();
        map.put("userid", userId);
        map.put("fatherId", fatherid);
        //查找是否有该条记录
        List<user_favo> favos = favoService.findFavo(map);
        System.out.println("是否有条记录" + favos);
        //设置返回值
        Long result = 0L;
        if (null == favos || favos.size() <= 0) {
            log.info("没有该条粉丝记录");
            //增加粉丝记录
            map.clear();
            map.put("userId", userId);
            map.put("fatherId", fatherid);
            map.put("typeId", noteId);
            map.put("chooseTime", DateUtils.newDateTime());
            Integer integer = favoService.addFavo(map);
            if (integer == 0) {
                return "{\"Message\": \"-2\"}";
            }
            //粉丝数加1
//            UserInfo userInfo = new UserInfo();
            UserInfo userInfo = userUpdateService.selectUserInfoByUserId(userId);
            userInfo.setFanNumber(userInfo.getFanNumber() + 1);
            result = Long.valueOf(userInfo.getFanNumber());
            log.info("加过的粉丝为" + ":" + result);
            //更新粉丝数量
            Boolean aBoolean = userInfoService.changeFavo(userInfo);
            String alias = String.valueOf(userInfo.getUserid());
            Map<String, String> parm = new HashMap<>();
            //这里的id是,移动端集成极光并登陆后,极光用户的rid
            //*parm.put("id", "190e35f7e00692e3c9e");
            //设置提示信息,内容是文章标题
            parm.put("msg", username + "已经成为您的粉丝了");
            JPush.jpushIOS(parm, alias);
            if (!aBoolean) {
            }
            return "{\"Message\": \"1\"}";
        } else {
            log.info("已有该条粉丝记录");
            return "{\"Message\": \"0\"}";
        }
    }



    @RequestMapping(value = "fansList", method = RequestMethod.GET)
    @ApiOperation(value = "粉丝列表", notes = "粉丝列表 message 0=>失败  1=>成功")
    public String fansList(){
        List<user_favo> fansLists = favoService.selectfansList();
        if(fansLists==null||fansLists.size()<=0){
            return "{\"Message\": \"0\"}";
        }
        return "{\"Message\": \"1\",\"Data\":"+ JSON.toJSONString(fansLists)+"}";
    }


}
