package com.yumiaobaobao.app.moremenu.myattention.taiking.controller;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.serializer.SerializerFeature;
import com.yumiaobaobao.app.moremenu.myattention.taiking.entity.TaiKingFollow;
import com.yumiaobaobao.app.moremenu.myattention.taiking.service.TaiKingFollowService;
import com.yumiaobaobao.app.taiking.entity.TaiKing;
import com.yumiaobaobao.app.user.entity.UserInfo;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Created by WH on 2019/04/10.
 */
@RestController
@Component
@Api(tags = "我的关注-专题 1.可能感兴趣的专题 2.我关注的专题 3.关注 4.取关 5.判断'我'是否关注该专题")
public class TaiKingFollowController {

    @Autowired
    private TaiKingFollowService taiKingFollowService;
    @Autowired
    private com.yumiaobaobao.app.taiking.taikingupdate.service.TaiKingUpdateService taiKingUpdateService;

    Map<String, Object> talkingmap;

    List<Map<String, Object>> myTalkingList;

    @ApiOperation(value = "判断'我'是否关注该专题", notes = "判断'我'是否关注该专题（返回值供前端判断并显示相应的按钮)  Message 0=>不是 1=>是")
    @RequestMapping(value = "/selectTouch", method = RequestMethod.GET)
    public String selectTouch(@ApiParam("我的id") @RequestParam(value = "userId") String userId, @ApiParam("专题id") @RequestParam(value = "taiKingId") String taiKingId) {
        List<UserInfo> reslit = taiKingFollowService.selectTouch(userId, taiKingId);
        if (reslit == null || reslit.size() == 0) {
            return "{\"Message\": \"0\"}";
        }
        return "{\"Message\": \"1\"}";
    }

    @ApiOperation(value = "可能感兴趣的专题", notes = "可能感兴趣的专题  Message 0=>没有数据")
    @RequestMapping(value = "/maytalking", method = RequestMethod.GET)
    public String maytalking(@ApiParam("我的id") @RequestParam(value = "userid") int userid) {
        List<TaiKing> reslit = taiKingFollowService.maytalking(userid);
        if (reslit == null || reslit.size() == 0) {
            return "{\"Message\": \"0\"}";
        }
        return "{\"Message\": \"1\", \"Data\":" + JSON.toJSONString(reslit) + "}";

    }

    @ApiOperation(value = "我关注的专题", notes = "我关注的专题  message 0=>没有关注人 -1=>用户数据异常 " +
            "attention 0=>没有关注 1=>已关注 ")
    @RequestMapping(value = "/byUsreidSelectShopInfo", method = RequestMethod.GET)
    public String byUsreidSelectShopInfo(@ApiParam(value = "用户id") @RequestParam("userid") String userid) {
        List<TaiKingFollow> list = taiKingFollowService.selectAttention(userid);
        if (list == null || list.size() == 0) {
            return "{\"Message\": \"0\"}";
        }
        myTalkingList = new ArrayList<Map<String, Object>>();
        try {
            for (TaiKingFollow a : list) {
                //查询talking信息
                talkingmap = new HashMap<String, Object>();
                List<TaiKing> taiKings = taiKingUpdateService.selectById(String.valueOf(a.getTalkingid()));
//                String s = selectTouch(userid, String.valueOf(a.getTalkingid()));
//                JSONObject jsonObject = JSONObject.parseObject(s);
                talkingmap.put("talking", taiKings.get(0));
       //         talkingmap.put("attention", jsonObject.get("Message").toString());
                myTalkingList.add(talkingmap);
            }
        } catch (Exception e) {
            return "{\"Message\": \"-1\"}";
        }
        return "{\"Message\": \"1\", \"Data\":" + JSON.toJSONString(myTalkingList, SerializerFeature.DisableCircularReferenceDetect) + "}";
    }

    @ApiOperation(value = "关注", notes = "关注  Message 0=>关注失败  1=>关注成功 -1=>已经关注无法再次关注  ")
    @RequestMapping(value = "/addTalKingTouch", method = RequestMethod.POST)
    public String addTalKingTouch(@ApiParam(value = "用户id") @RequestParam("userID") String userID, @ApiParam(value = "专题id") @RequestParam("talKing") String talKing) {
        List<UserInfo> list = taiKingFollowService.selectTouch(userID, talKing);//判断是否存在关注关系
        if (null == list || list.size() == 0) {
            if (taiKingFollowService.addtakingtouch(userID, talKing) < 1) { //不存在关注关系  执行关注
                return "{\"Message\": \"0\"}";
            }
        } else {
            return "{\"Message\": \"-1\"}";
        }
        return "{\"Message\": \"1\"}";
    }

    @ApiOperation(value = "取消关注", notes = "取消关注  Message  0=>取关失败   1=>取关成功 -1=>没有关注无法取消 ")
    @RequestMapping(value = "/lessTakingTouch", method = RequestMethod.POST)
    public String lessTakingTouch(@ApiParam(value = "用户id") @RequestParam("userID") String userID, @ApiParam(value = "专题id") @RequestParam("takingID") String takingID) {
        List<UserInfo> list = taiKingFollowService.selectTouch(userID, takingID);//判断是否存在关注关系
        if (null == list || list.size() == 0) {
            return "{\"Message\": \"-1\"}";
        }
        if (taiKingFollowService.lesstakingtouch(userID, takingID) <= 0) {
            return "{\"Message\": \"0\"}";
        }
        return "{\"Message\": \"1\"}";
    }
}
